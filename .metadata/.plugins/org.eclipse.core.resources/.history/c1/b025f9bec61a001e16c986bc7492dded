package net.helix.pvp;


import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import net.helix.pvp.HelixPvP;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.Chest;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.Plugin;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

public class Feast extends BukkitRunnable {
  private final int spawnEveryMinutes;
  
  private boolean spawned;
  
  private final World world;
  
  private final int chestItemMinAmount = 2;
  
  private final int chestItemMaxAmount = 7;
  
  private final List<Location> chests;
  
  private final List<ItemStack> items;
  
  private Long time;
  
  public Feast(JavaPlugin plugin) {
   int spawnEveryMinutes = HelixPvP.getInstance().getConfig().getInt("TempoFeast");
   boolean spawned = false;
    World world = Bukkit.getWorld(HelixPvP.getInstance().getConfig().getString("FeastWorld"));
   int chestItemMinAmount = 2;
   this.world = world;

   int chestItemMaxAmount = 7;
   List<Location>  chests = Arrays.asList(new Location[] { new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau1X"), HelixPvP.getInstance().getConfig().getInt("Bau1Y"), HelixPvP.getInstance().getConfig().getInt("Bau1Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau2X"), HelixPvP.getInstance().getConfig().getInt("Bau2Y"), HelixPvP.getInstance().getConfig().getInt("Bau2Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau3X"), HelixPvP.getInstance().getConfig().getInt("Bau3Y"), HelixPvP.getInstance().getConfig().getInt("Bau3Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau4X"), HelixPvP.getInstance().getConfig().getInt("Bau4Y"), HelixPvP.getInstance().getConfig().getInt("Bau4Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau5X"), HelixPvP.getInstance().getConfig().getInt("Bau5Y"), HelixPvP.getInstance().getConfig().getInt("Bau5Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau6X"), HelixPvP.getInstance().getConfig().getInt("Bau6Y"), HelixPvP.getInstance().getConfig().getInt("Bau6Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau7X"), HelixPvP.getInstance().getConfig().getInt("Bau7Y"), HelixPvP.getInstance().getConfig().getInt("Bau7Z")), 
          new Location(world, HelixPvP.getInstance().getConfig().getInt("Bau8X"), HelixPvP.getInstance().getConfig().getInt("Bau8Y"), HelixPvP.getInstance().getConfig().getInt("Bau8Z")) });
    items = Arrays.asList(new ItemStack[] { 
          new ItemStack(Material.GOLD_HELMET), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.CHAINMAIL_CHESTPLATE), 
          new ItemStack(Material.GOLDEN_APPLE), 
          new ItemStack(Material.ARROW, 16), 
          new ItemStack(Material.POTION, 1, (short)16418), 
          new ItemStack(Material.POTION, 1, (short)16387), 
          new ItemStack(Material.POTION, 1, (short)16456), 
          new ItemStack(Material.POTION, 1, (short)8233), 
          new ItemStack(Material.CHAINMAIL_HELMET), 
          new ItemStack(Material.CHAINMAIL_BOOTS), 
          new ItemStack(Material.LEATHER_HELMET), 
          new ItemStack(Material.LEATHER_LEGGINGS), 
          new ItemStack(Material.POTION, 1, (short)16388), 
          new ItemStack(Material.CHAINMAIL_HELMET), 
          new ItemStack(Material.CHAINMAIL_LEGGINGS), 
          new ItemStack(Material.CHAINMAIL_HELMET), 
          new ItemStack(Material.CHAINMAIL_BOOTS), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.EXP_BOTTLE), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.IRON_BOOTS), 
          new ItemStack(Material.IRON_HELMET), 
          new ItemStack(Material.ARROW, 10), 
          new ItemStack(Material.IRON_AXE), 
          new ItemStack(Material.ARROW, 10), 
          new ItemStack(Material.BOW), 
          new ItemStack(Material.BOW), 
          new ItemStack(Material.ENDER_PEARL), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.MUSHROOM_SOUP), 
          new ItemStack(Material.GOLDEN_APPLE, 3), 
          new ItemStack(Material.CHAINMAIL_LEGGINGS), 
          new ItemStack(Material.POTION, 1, (short)373), 
          new ItemStack(Material.POTION, 1, (short)373), 
          new ItemStack(Material.POTION, 1, (short)373) });
    time = Long.valueOf(TimeUnit.MINUTES.toSeconds(spawnEveryMinutes));
    this.chests = chests;
    this.spawnEveryMinutes = spawnEveryMinutes;
    runTaskTimer((Plugin)plugin, 0L, 20L);
  }
  
  public void run() {
    if (Bukkit.getOnlinePlayers().isEmpty())
      return; 
    time = Long.valueOf(this.time.longValue() - 1L);
    long minutes = this.time.longValue() / 60L * 2L;
    long seconds = this.time.longValue() % 60L;
    if (!this.spawned && minutes == 0L) {
      if (seconds == 50L || seconds == 40L || seconds == 30L || seconds == 20L || seconds == 10L || seconds == 5L || seconds == 4L || seconds == 3L || seconds == 2L || seconds == 1L)
        Bukkit.broadcastMessage(ChatColor.RED + "O Feast irÃ¡ spawnar em " + seconds + ((seconds > 1L) ? " segundo" : " segundos")); 
      if (seconds <= 0L) {
        Bukkit.broadcastMessage(ChatColor.GREEN + "O feast nasceu!");
        int spawnDurationSeconds = 20;
        world.strikeLightning(new Location(this.world, HelixPvP.getInstance().getConfig().getInt("RaioX"), HelixPvP.getInstance().getConfig().getInt("RaioY"), HelixPvP.getInstance().getConfig().getInt("RaioZ")));
       time = Long.valueOf(spawnDurationSeconds);
        spawned = true;
        chests.forEach(chest -> {
              chest.getBlock().setType(Material.CHEST);
              Random random = new Random();
              Inventory inventory = ((Chest)chest.getBlock().getState()).getInventory();
              int itemsAmount = random.nextInt(6) + 7;
              for (int i = 0; i < itemsAmount; i++) {
                int slot = random.nextInt(inventory.getSize());
                int randomItemIndex = random.nextInt(this.items.size());
                ItemStack randomItem = this.items.get(randomItemIndex);
                inventory.setItem(slot, randomItem);
              } 
            });
      } 
      return;
    } 
    if (this.spawned && seconds <= 0L) {
      this.time = Long.valueOf(TimeUnit.MINUTES.toSeconds(this.spawnEveryMinutes));
      this.chests.stream().map(Location::getBlock).forEach(chest -> chest.setType(Material.AIR));
      this.spawned = false;
    } 
  }
}
